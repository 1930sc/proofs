// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var BaseScraper, constants, iced, v_codes, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script/lib/coffee-script/iced').runtime;
  __iced_k = __iced_k_noop = function() {};

  constants = require('../constants').constants;

  v_codes = constants.v_codes;

  BaseScraper = (function() {
    function BaseScraper(_arg) {
      this.libs = _arg.libs;
    }

    BaseScraper.prototype.hunt = function(username, signature, cb) {};

    BaseScraper.prototype.id_to_url = function(username, status_id) {};

    BaseScraper.prototype.check_status = function(_arg, cb) {
      var signature, status_id, url, username;
      username = _arg.username, url = _arg.url, signature = _arg.signature, status_id = _arg.status_id;
    };

    BaseScraper.prototype._get_url_body = function(opts, cb) {
      var body, err, rc, response, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);

      /*
        cb(err, body) only replies with body if status is 200
      */
      body = null;
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/scrapers/base.iced",
          funcname: "BaseScraper._get_url_body"
        });
        _this.libs.request(opts, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              response = arguments[1];
              return body = arguments[2];
            };
          })(),
          lineno: 20
        }));
        __iced_deferrals._fulfill();
      })(function() {
        rc = typeof err !== "undefined" && err !== null ? v_codes.HOST_UNREACHABLE : response.statusCode === 200 ? v_codes.OK : response.statusCode >= 500 ? v_codes.HTTP_500 : response.statusCode >= 400 ? v_codes.HTTP_400 : response.statusCode >= 300 ? v_codes.HTTP_300 : v_codes.HTTP_OTHER;
        return cb(err, rc, body);
      });
    };

    return BaseScraper;

  })();

  exports.BaseScraper = BaseScraper;

}).call(this);
