// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var TwitterScraper, cheerio, iced, request, v_codes, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script/lib/coffee-script/iced').runtime;
  __iced_k = __iced_k_noop = function() {};

  request = require('request');

  cheerio = require('cheerio');

  v_codes = require('./constants').constants.v_codes;

  TwitterScraper = (function() {
    function TwitterScraper() {}

    TwitterScraper.prototype.hunt = function(username, signature, cb) {
      var $, err, html, item, p, rc, stream, stream_item, tweet_id, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      rc = v_codes.OK;
      tweet_id = null;
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/twitter_scraper.iced",
          funcname: "TwitterScraper.hunt"
        });
        _this._get_url_body("https://twitter.com/" + username, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              rc = arguments[1];
              return html = arguments[2];
            };
          })(),
          lineno: 17
        }));
        __iced_deferrals._fulfill();
      })(function() {
        var _i, _len, _ref;
        if (rc === v_codes.OK) {
          $ = cheerio.load(html);
          stream = $('.profile-stream li.stream-item .tweet');
          if (!stream.length) {
            rc = v_codes.CONTENT_FAILURE;
            if ($('.stream-protected').length) {
              rc = v_codes.PERMISSION_DENIED;
            }
          } else {
            for (_i = 0, _len = stream.length; _i < _len; _i++) {
              stream_item = stream[_i];
              item = $(stream_item);
              if ((((_ref = item.data('screenName')) != null ? _ref.toLowerCase() : void 0) === username.toLowerCase()) && (item.data('tweetId') != null)) {
                p = item.find('p.tweet-text');
                if ((p.first().html().indexOf(signature)) === 0) {
                  tweet_id = item.data('tweetId');
                  rc = v_codes.OK;
                  break;
                }
              }
            }
            if (tweet_id == null) {
              rc = v_codes.NOT_FOUND;
            }
          }
        }
        return cb(err, rc, tweet_id);
      });
    };

    TwitterScraper.prototype.id_to_url = function(username, status_id) {
      return "https://twitter.com/" + username + "/status/" + status_id;
    };

    TwitterScraper.prototype.check_status = function(username, url, signature, cb) {
      var $, div, err, html, p, rc, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/twitter_scraper.iced",
          funcname: "TwitterScraper.check_status"
        });
        _this._get_url_body(url, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              rc = arguments[1];
              return html = arguments[2];
            };
          })(),
          lineno: 61
        }));
        __iced_deferrals._fulfill();
      })(function() {
        var _ref;
        if (rc === v_codes.OK) {
          $ = cheerio.load(html);
          div = $('.permalink-tweet-container .permalink-tweet');
          if (!div.length) {
            rc = v_codes.FAILED_PARSE;
          } else {
            div = div.first();
            rc = username.toLowerCase() !== ((_ref = div.data('screenName')) != null ? _ref.toLowerCase() : void 0) ? v_codes.CONTENT_FAILURE : status_id !== div.data('tweetId') ? v_codes.CONTENT_FAILURE : ((p = div.find('p.tweet-text')) == null) || !p.length ? v_codes.MISSING : (p.first().html().indexOf(signature)) === 0 ? v_codes.OK : v_codes.DELETED;
          }
        }
        return cb(err, rc);
      });
    };

    TwitterScraper.prototype._get_url_body = function(url, cb) {
      var body, err, rc, response, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);

      /*
        cb(err, body) only replies with body if status is 200
      */
      body = null;
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "src/twitter_scraper.iced",
          funcname: "TwitterScraper._get_url_body"
        });
        request(url, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              err = arguments[0];
              response = arguments[1];
              return body = arguments[2];
            };
          })(),
          lineno: 95
        }));
        __iced_deferrals._fulfill();
      })(function() {
        rc = typeof err !== "undefined" && err !== null ? v_codes.HOST_UNREACHABLE : response.statusCode === 200 ? v_codes.OK : response.statusCode >= 500 ? v_codes.HTTP_500 : response.statusCode >= 400 ? v_codes.HTTP_400 : response.statusCode >= 300 ? v_codes.HTTP_300 : v_codes.HTTP_OTHER;
        return cb(err, rc, body);
      });
    };

    return TwitterScraper;

  })();

  module.exports = TwitterScraper;

}).call(this);
